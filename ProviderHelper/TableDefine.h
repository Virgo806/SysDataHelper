#ifndef _H_TABLEDEFINE_H_
#define _H_TABLEDEFINE_H_
#pragma once

// 表字段1~10的结构定义
#pragma region TABLE1-10
#define DBTS_TABLE1(TABLE_NAME, TYPE1, FIELD1) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; \
            } \
        };

#define DBTS_TABLE2(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; \
            } \
        };

#define DBTS_TABLE3(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; \
            } \
        };

#define DBTS_TABLE4(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; \
            } \
        };

#define DBTS_TABLE5(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; \
            } \
        };

#define DBTS_TABLE6(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; \
            } \
        };

#define DBTS_TABLE7(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; \
            } \
        };

#define DBTS_TABLE8(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; \
            } \
        };

#define DBTS_TABLE9(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; \
            } \
        };

#define DBTS_TABLE10(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
            } \
        };
#pragma endregion

// 表字段11~20的结构定义
#pragma region TABLE11-20
#define DBTS_TABLE11(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; \
            } \
        };

#define DBTS_TABLE12(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; \
            } \
        };

#define DBTS_TABLE13(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; \
            } \
        };

#define DBTS_TABLE14(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; \
            } \
        };

#define DBTS_TABLE15(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; \
            } \
        };

#define DBTS_TABLE16(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; \
            } \
        };

#define DBTS_TABLE17(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; \
            } \
        };

#define DBTS_TABLE18(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; \
            } \
        };

#define DBTS_TABLE19(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; \
            } \
        };

#define DBTS_TABLE20(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
            } \
        };
#pragma endregion

// 表字段21~30的结构定义
#pragma region TABLE21-30
#define DBTS_TABLE21(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; \
            } \
        };

#define DBTS_TABLE22(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21,  TYPE22, FIELD22) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; \
            } \
        };

#define DBTS_TABLE23(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21,  TYPE22, FIELD22, TYPE23, FIELD23) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; \
            } \
        };

#define DBTS_TABLE24(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21,  TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; \
            } \
        };

#define DBTS_TABLE25(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21,  TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; \
            } \
        };

#define DBTS_TABLE26(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21,  TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; \
            } \
        };

#define DBTS_TABLE27(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21,  TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; \
            } \
        };

#define DBTS_TABLE28(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21, TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; \
            } \
        };

#define DBTS_TABLE29(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21, TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29;\
            } \
        };

#define DBTS_TABLE30(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21, TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29, TYPE30, FIELD30) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; TYPE30 FIELD30; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29; FIELD30 = r.FIELD30; \
            } \
        };
#pragma endregion

// 表字段31~40的结构定义
#pragma region TABLE31-40
#define DBTS_TABLE31(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21,  TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29, TYPE30, FIELD30, \
        TYPE31, FIELD31) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; TYPE30 FIELD30; \
            TYPE31 FIELD31; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29; FIELD30 = r.FIELD30; \
                FIELD31 = r.FIELD31; \
            } \
        };

#define DBTS_TABLE32(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21,  TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29, TYPE30, FIELD30, \
        TYPE31, FIELD31, TYPE32, FIELD32) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; TYPE30 FIELD30; \
            TYPE31 FIELD31; TYPE32 FIELD32; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29; FIELD30 = r.FIELD30; \
                FIELD31 = r.FIELD31; FIELD32 = r.FIELD32; \
            } \
        };

#define DBTS_TABLE33(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21, TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29, TYPE30, FIELD30, \
        TYPE31, FIELD31, TYPE32, FIELD32, TYPE33, FIELD33) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; TYPE30 FIELD30; \
            TYPE31 FIELD31; TYPE32 FIELD32; TYPE33 FIELD33; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29; FIELD30 = r.FIELD30; \
                FIELD31 = r.FIELD31; FIELD32 = r.FIELD32; FIELD33 = r.FIELD33; \
            } \
        };

#define DBTS_TABLE34(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21, TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29, TYPE30, FIELD30, \
        TYPE31, FIELD31, TYPE32, FIELD32, TYPE33, FIELD33, TYPE34, FIELD34) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; TYPE30 FIELD30; \
            TYPE31 FIELD31; TYPE32 FIELD32; TYPE33 FIELD33; TYPE34 FIELD34; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29; FIELD30 = r.FIELD30; \
                FIELD31 = r.FIELD31; FIELD32 = r.FIELD32; FIELD33 = r.FIELD33; FIELD34 = r.FIELD34; \
            } \
        };

#define DBTS_TABLE35(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21, TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29, TYPE30, FIELD30, \
        TYPE31, FIELD31, TYPE32, FIELD32, TYPE33, FIELD33, TYPE34, FIELD34, TYPE35, FIELD35) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; TYPE30 FIELD30; \
            TYPE31 FIELD31; TYPE32 FIELD32; TYPE33 FIELD33; TYPE34 FIELD34; TYPE35 FIELD35; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29; FIELD30 = r.FIELD30; \
                FIELD31 = r.FIELD31; FIELD32 = r.FIELD32; FIELD33 = r.FIELD33; FIELD34 = r.FIELD34; FIELD35 = r.FIELD35; \
            } \
        };

#define DBTS_TABLE36(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21, TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29, TYPE30, FIELD30, \
        TYPE31, FIELD31, TYPE32, FIELD32, TYPE33, FIELD33, TYPE34, FIELD34, TYPE35, FIELD35, TYPE36, FIELD36) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; TYPE30 FIELD30; \
            TYPE31 FIELD31; TYPE32 FIELD32; TYPE33 FIELD33; TYPE34 FIELD34; TYPE35 FIELD35; TYPE36 FIELD36; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29; FIELD30 = r.FIELD30; \
                FIELD31 = r.FIELD31; FIELD32 = r.FIELD32; FIELD33 = r.FIELD33; FIELD34 = r.FIELD34; FIELD35 = r.FIELD35; FIELD36 = r.FIELD36; \
            } \
        };

#define DBTS_TABLE37(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21, TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29, TYPE30, FIELD30, \
        TYPE31, FIELD31, TYPE32, FIELD32, TYPE33, FIELD33, TYPE34, FIELD34, TYPE35, FIELD35, TYPE36, FIELD36, TYPE37, FIELD37) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; TYPE30 FIELD30; \
            TYPE31 FIELD31; TYPE32 FIELD32; TYPE33 FIELD33; TYPE34 FIELD34; TYPE35 FIELD35; TYPE36 FIELD36; TYPE37 FIELD37; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29; FIELD30 = r.FIELD30; \
                FIELD31 = r.FIELD31; FIELD32 = r.FIELD32; FIELD33 = r.FIELD33; FIELD34 = r.FIELD34; FIELD35 = r.FIELD35; FIELD36 = r.FIELD36; FIELD37 = r.FIELD37; \
            } \
        };

#define DBTS_TABLE38(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21, TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29, TYPE30, FIELD30, \
        TYPE31, FIELD31, TYPE32, FIELD32, TYPE33, FIELD33, TYPE34, FIELD34, TYPE35, FIELD35, TYPE36, FIELD36, TYPE37, FIELD37, TYPE38, FIELD38) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; TYPE30 FIELD30; \
            TYPE31 FIELD31; TYPE32 FIELD32; TYPE33 FIELD33; TYPE34 FIELD34; TYPE35 FIELD35; TYPE36 FIELD36; TYPE37 FIELD37; TYPE38 FIELD38; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29; FIELD30 = r.FIELD30; \
                FIELD31 = r.FIELD31; FIELD32 = r.FIELD32; FIELD33 = r.FIELD33; FIELD34 = r.FIELD34; FIELD35 = r.FIELD35; FIELD36 = r.FIELD36; FIELD37 = r.FIELD37; FIELD38 = r.FIELD38; \
            } \
        };

#define DBTS_TABLE39(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21, TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29, TYPE30, FIELD30, \
        TYPE31, FIELD31, TYPE32, FIELD32, TYPE33, FIELD33, TYPE34, FIELD34, TYPE35, FIELD35, TYPE36, FIELD36, TYPE37, FIELD37, TYPE38, FIELD38, TYPE39, FIELD39) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; TYPE30 FIELD30; \
            TYPE31 FIELD31; TYPE32 FIELD32; TYPE33 FIELD33; TYPE34 FIELD34; TYPE35 FIELD35; TYPE36 FIELD36; TYPE37 FIELD37; TYPE38 FIELD38; TYPE39 FIELD39; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29; FIELD30 = r.FIELD30; \
                FIELD31 = r.FIELD31; FIELD32 = r.FIELD32; FIELD33 = r.FIELD33; FIELD34 = r.FIELD34; FIELD35 = r.FIELD35; FIELD36 = r.FIELD36; FIELD37 = r.FIELD37; FIELD38 = r.FIELD38; FIELD39 = r.FIELD39; \
            } \
        };

#define DBTS_TABLE40(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21, TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29, TYPE30, FIELD30, \
        TYPE31, FIELD31, TYPE32, FIELD32, TYPE33, FIELD33, TYPE34, FIELD34, TYPE35, FIELD35, TYPE36, FIELD36, TYPE37, FIELD37, TYPE38, FIELD38, TYPE39, FIELD39, TYPE40, FIELD40) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; TYPE30 FIELD30; \
            TYPE31 FIELD31; TYPE32 FIELD32; TYPE33 FIELD33; TYPE34 FIELD34; TYPE35 FIELD35; TYPE36 FIELD36; TYPE37 FIELD37; TYPE38 FIELD38; TYPE39 FIELD39; TYPE40 FIELD40;\
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29; FIELD30 = r.FIELD30; \
                FIELD31 = r.FIELD31; FIELD32 = r.FIELD32; FIELD33 = r.FIELD33; FIELD34 = r.FIELD34; FIELD35 = r.FIELD35; FIELD36 = r.FIELD36; FIELD37 = r.FIELD37; FIELD38 = r.FIELD38; FIELD39 = r.FIELD39; FIELD40 = r.FIELD40; \
            } \
        };
#pragma endregion

// 表字段41~50的结构定义
#pragma region TABLE41-50
#define DBTS_TABLE41(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21, TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29, TYPE30, FIELD30, \
        TYPE31, FIELD31, TYPE32, FIELD32, TYPE33, FIELD33, TYPE34, FIELD34, TYPE35, FIELD35, TYPE36, FIELD36, TYPE37, FIELD37, TYPE38, FIELD38, TYPE39, FIELD39, TYPE40, FIELD40, \
        TYPE41, FIELD41) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; TYPE30 FIELD30; \
            TYPE31 FIELD31; TYPE32 FIELD32; TYPE33 FIELD33; TYPE34 FIELD34; TYPE35 FIELD35; TYPE36 FIELD36; TYPE37 FIELD37; TYPE38 FIELD38; TYPE39 FIELD39; TYPE40 FIELD40; \
            TYPE41 FIELD41; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29; FIELD30 = r.FIELD30; \
                FIELD31 = r.FIELD31; FIELD32 = r.FIELD32; FIELD33 = r.FIELD33; FIELD34 = r.FIELD34; FIELD35 = r.FIELD35; FIELD36 = r.FIELD36; FIELD37 = r.FIELD37; FIELD38 = r.FIELD38; FIELD39 = r.FIELD39; FIELD40 = r.FIELD40; \
                FIELD41 = r.FIELD41; \
            } \
        };

#define DBTS_TABLE42(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21, TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29, TYPE30, FIELD30, \
        TYPE31, FIELD31, TYPE32, FIELD32, TYPE33, FIELD33, TYPE34, FIELD34, TYPE35, FIELD35, TYPE36, FIELD36, TYPE37, FIELD37, TYPE38, FIELD38, TYPE39, FIELD39, TYPE40, FIELD40, \
        TYPE41, FIELD41, TYPE42, FIELD42) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; TYPE30 FIELD30; \
            TYPE31 FIELD31; TYPE32 FIELD32; TYPE33 FIELD33; TYPE34 FIELD34; TYPE35 FIELD35; TYPE36 FIELD36; TYPE37 FIELD37; TYPE38 FIELD38; TYPE39 FIELD39; TYPE40 FIELD40; \
            TYPE41 FIELD41; TYPE42 FIELD42; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29; FIELD30 = r.FIELD30; \
                FIELD31 = r.FIELD31; FIELD32 = r.FIELD32; FIELD33 = r.FIELD33; FIELD34 = r.FIELD34; FIELD35 = r.FIELD35; FIELD36 = r.FIELD36; FIELD37 = r.FIELD37; FIELD38 = r.FIELD38; FIELD39 = r.FIELD39; FIELD40 = r.FIELD40; \
                FIELD41 = r.FIELD41; FIELD42 = r.FIELD42; \
            } \
        };

#define DBTS_TABLE43(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21, TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29, TYPE30, FIELD30, \
        TYPE31, FIELD31, TYPE32, FIELD32, TYPE33, FIELD33, TYPE34, FIELD34, TYPE35, FIELD35, TYPE36, FIELD36, TYPE37, FIELD37, TYPE38, FIELD38, TYPE39, FIELD39, TYPE40, FIELD40, \
        TYPE41, FIELD41, TYPE42, FIELD42, TYPE43, FIELD43) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; TYPE30 FIELD30; \
            TYPE31 FIELD31; TYPE32 FIELD32; TYPE33 FIELD33; TYPE34 FIELD34; TYPE35 FIELD35; TYPE36 FIELD36; TYPE37 FIELD37; TYPE38 FIELD38; TYPE39 FIELD39; TYPE40 FIELD40; \
            TYPE41 FIELD41; TYPE42 FIELD42; TYPE43 FIELD43; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29; FIELD30 = r.FIELD30; \
                FIELD31 = r.FIELD31; FIELD32 = r.FIELD32; FIELD33 = r.FIELD33; FIELD34 = r.FIELD34; FIELD35 = r.FIELD35; FIELD36 = r.FIELD36; FIELD37 = r.FIELD37; FIELD38 = r.FIELD38; FIELD39 = r.FIELD39; FIELD40 = r.FIELD40; \
                FIELD41 = r.FIELD41; FIELD42 = r.FIELD42; FIELD43 = r.FIELD43; \
            } \
        };

#define DBTS_TABLE44(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21, TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29, TYPE30, FIELD30, \
        TYPE31, FIELD31, TYPE32, FIELD32, TYPE33, FIELD33, TYPE34, FIELD34, TYPE35, FIELD35, TYPE36, FIELD36, TYPE37, FIELD37, TYPE38, FIELD38, TYPE39, FIELD39, TYPE40, FIELD40, \
        TYPE41, FIELD41, TYPE42, FIELD42, TYPE43, FIELD43, TYPE44, FIELD44) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; TYPE30 FIELD30; \
            TYPE31 FIELD31; TYPE32 FIELD32; TYPE33 FIELD33; TYPE34 FIELD34; TYPE35 FIELD35; TYPE36 FIELD36; TYPE37 FIELD37; TYPE38 FIELD38; TYPE39 FIELD39; TYPE40 FIELD40; \
            TYPE41 FIELD41; TYPE42 FIELD42; TYPE43 FIELD43; TYPE44 FIELD44; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29; FIELD30 = r.FIELD30; \
                FIELD31 = r.FIELD31; FIELD32 = r.FIELD32; FIELD33 = r.FIELD33; FIELD34 = r.FIELD34; FIELD35 = r.FIELD35; FIELD36 = r.FIELD36; FIELD37 = r.FIELD37; FIELD38 = r.FIELD38; FIELD39 = r.FIELD39; FIELD40 = r.FIELD40; \
                FIELD41 = r.FIELD41; FIELD42 = r.FIELD42; FIELD43 = r.FIELD43; FIELD44 = r.FIELD44; \
            } \
        };

#define DBTS_TABLE45(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21, TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29, TYPE30, FIELD30, \
        TYPE31, FIELD31, TYPE32, FIELD32, TYPE33, FIELD33, TYPE34, FIELD34, TYPE35, FIELD35, TYPE36, FIELD36, TYPE37, FIELD37, TYPE38, FIELD38, TYPE39, FIELD39, TYPE40, FIELD40, \
        TYPE41, FIELD41, TYPE42, FIELD42, TYPE43, FIELD43, TYPE44, FIELD44, TYPE45, FIELD45) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; TYPE30 FIELD30; \
            TYPE31 FIELD31; TYPE32 FIELD32; TYPE33 FIELD33; TYPE34 FIELD34; TYPE35 FIELD35; TYPE36 FIELD36; TYPE37 FIELD37; TYPE38 FIELD38; TYPE39 FIELD39; TYPE40 FIELD40; \
            TYPE41 FIELD41; TYPE42 FIELD42; TYPE43 FIELD43; TYPE44 FIELD44; TYPE45 FIELD45; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29; FIELD30 = r.FIELD30; \
                FIELD31 = r.FIELD31; FIELD32 = r.FIELD32; FIELD33 = r.FIELD33; FIELD34 = r.FIELD34; FIELD35 = r.FIELD35; FIELD36 = r.FIELD36; FIELD37 = r.FIELD37; FIELD38 = r.FIELD38; FIELD39 = r.FIELD39; FIELD40 = r.FIELD40; \
                FIELD41 = r.FIELD41; FIELD42 = r.FIELD42; FIELD43 = r.FIELD43; FIELD44 = r.FIELD44; FIELD45 = r.FIELD45; \
            } \
        };

#define DBTS_TABLE46(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21, TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29, TYPE30, FIELD30, \
        TYPE31, FIELD31, TYPE32, FIELD32, TYPE33, FIELD33, TYPE34, FIELD34, TYPE35, FIELD35, TYPE36, FIELD36, TYPE37, FIELD37, TYPE38, FIELD38, TYPE39, FIELD39, TYPE40, FIELD40, \
        TYPE41, FIELD41, TYPE42, FIELD42, TYPE43, FIELD43, TYPE44, FIELD44, TYPE45, FIELD45, TYPE46, FIELD46) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; TYPE30 FIELD30; \
            TYPE31 FIELD31; TYPE32 FIELD32; TYPE33 FIELD33; TYPE34 FIELD34; TYPE35 FIELD35; TYPE36 FIELD36; TYPE37 FIELD37; TYPE38 FIELD38; TYPE39 FIELD39; TYPE40 FIELD40; \
            TYPE41 FIELD41; TYPE42 FIELD42; TYPE43 FIELD43; TYPE44 FIELD44; TYPE45 FIELD45; TYPE46 FIELD46; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29; FIELD30 = r.FIELD30; \
                FIELD31 = r.FIELD31; FIELD32 = r.FIELD32; FIELD33 = r.FIELD33; FIELD34 = r.FIELD34; FIELD35 = r.FIELD35; FIELD36 = r.FIELD36; FIELD37 = r.FIELD37; FIELD38 = r.FIELD38; FIELD39 = r.FIELD39; FIELD40 = r.FIELD40; \
                FIELD41 = r.FIELD41; FIELD42 = r.FIELD42; FIELD43 = r.FIELD43; FIELD44 = r.FIELD44; FIELD45 = r.FIELD45; FIELD46 = r.FIELD46; \
            } \
        };

#define DBTS_TABLE47(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21, TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29, TYPE30, FIELD30, \
        TYPE31, FIELD31, TYPE32, FIELD32, TYPE33, FIELD33, TYPE34, FIELD34, TYPE35, FIELD35, TYPE36, FIELD36, TYPE37, FIELD37, TYPE38, FIELD38, TYPE39, FIELD39, TYPE40, FIELD40, \
        TYPE41, FIELD41, TYPE42, FIELD42, TYPE43, FIELD43, TYPE44, FIELD44, TYPE45, FIELD45, TYPE46, FIELD46, TYPE47, FIELD47) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; TYPE30 FIELD30; \
            TYPE31 FIELD31; TYPE32 FIELD32; TYPE33 FIELD33; TYPE34 FIELD34; TYPE35 FIELD35; TYPE36 FIELD36; TYPE37 FIELD37; TYPE38 FIELD38; TYPE39 FIELD39; TYPE40 FIELD40; \
            TYPE41 FIELD41; TYPE42 FIELD42; TYPE43 FIELD43; TYPE44 FIELD44; TYPE45 FIELD45; TYPE46 FIELD46; TYPE47 FIELD47; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29; FIELD30 = r.FIELD30; \
                FIELD31 = r.FIELD31; FIELD32 = r.FIELD32; FIELD33 = r.FIELD33; FIELD34 = r.FIELD34; FIELD35 = r.FIELD35; FIELD36 = r.FIELD36; FIELD37 = r.FIELD37; FIELD38 = r.FIELD38; FIELD39 = r.FIELD39; FIELD40 = r.FIELD40; \
                FIELD41 = r.FIELD41; FIELD42 = r.FIELD42; FIELD43 = r.FIELD43; FIELD44 = r.FIELD44; FIELD45 = r.FIELD45; FIELD46 = r.FIELD46; FIELD47 = r.FIELD47; \
            } \
        };

#define DBTS_TABLE48(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21, TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29, TYPE30, FIELD30, \
        TYPE31, FIELD31, TYPE32, FIELD32, TYPE33, FIELD33, TYPE34, FIELD34, TYPE35, FIELD35, TYPE36, FIELD36, TYPE37, FIELD37, TYPE38, FIELD38, TYPE39, FIELD39, TYPE40, FIELD40, \
        TYPE41, FIELD41, TYPE42, FIELD42, TYPE43, FIELD43, TYPE44, FIELD44, TYPE45, FIELD45, TYPE46, FIELD46, TYPE47, FIELD47, TYPE48, FIELD48) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; TYPE30 FIELD30; \
            TYPE31 FIELD31; TYPE32 FIELD32; TYPE33 FIELD33; TYPE34 FIELD34; TYPE35 FIELD35; TYPE36 FIELD36; TYPE37 FIELD37; TYPE38 FIELD38; TYPE39 FIELD39; TYPE40 FIELD40; \
            TYPE41 FIELD41; TYPE42 FIELD42; TYPE43 FIELD43; TYPE44 FIELD44; TYPE45 FIELD45; TYPE46 FIELD46; TYPE47 FIELD47; TYPE48 FIELD48; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29; FIELD30 = r.FIELD30; \
                FIELD31 = r.FIELD31; FIELD32 = r.FIELD32; FIELD33 = r.FIELD33; FIELD34 = r.FIELD34; FIELD35 = r.FIELD35; FIELD36 = r.FIELD36; FIELD37 = r.FIELD37; FIELD38 = r.FIELD38; FIELD39 = r.FIELD39; FIELD40 = r.FIELD40; \
                FIELD41 = r.FIELD41; FIELD42 = r.FIELD42; FIELD43 = r.FIELD43; FIELD44 = r.FIELD44; FIELD45 = r.FIELD45; FIELD46 = r.FIELD46; FIELD47 = r.FIELD47; FIELD48 = r.FIELD48; \
            } \
        };

#define DBTS_TABLE49(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21, TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29, TYPE30, FIELD30, \
        TYPE31, FIELD31, TYPE32, FIELD32, TYPE33, FIELD33, TYPE34, FIELD34, TYPE35, FIELD35, TYPE36, FIELD36, TYPE37, FIELD37, TYPE38, FIELD38, TYPE39, FIELD39, TYPE40, FIELD40, \
        TYPE41, FIELD41, TYPE42, FIELD42, TYPE43, FIELD43, TYPE44, FIELD44, TYPE45, FIELD45, TYPE46, FIELD46, TYPE47, FIELD47, TYPE48, FIELD48, TYPE49, FIELD49) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; TYPE30 FIELD30; \
            TYPE31 FIELD31; TYPE32 FIELD32; TYPE33 FIELD33; TYPE34 FIELD34; TYPE35 FIELD35; TYPE36 FIELD36; TYPE37 FIELD37; TYPE38 FIELD38; TYPE39 FIELD39; TYPE40 FIELD40; \
            TYPE41 FIELD41; TYPE42 FIELD42; TYPE43 FIELD43; TYPE44 FIELD44; TYPE45 FIELD45; TYPE46 FIELD46; TYPE47 FIELD47; TYPE48 FIELD48; TYPE49 FIELD49; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29; FIELD30 = r.FIELD30; \
                FIELD31 = r.FIELD31; FIELD32 = r.FIELD32; FIELD33 = r.FIELD33; FIELD34 = r.FIELD34; FIELD35 = r.FIELD35; FIELD36 = r.FIELD36; FIELD37 = r.FIELD37; FIELD38 = r.FIELD38; FIELD39 = r.FIELD39; FIELD40 = r.FIELD40; \
                FIELD41 = r.FIELD41; FIELD42 = r.FIELD42; FIELD43 = r.FIELD43; FIELD44 = r.FIELD44; FIELD45 = r.FIELD45; FIELD46 = r.FIELD46; FIELD47 = r.FIELD47; FIELD48 = r.FIELD48; FIELD49 = r.FIELD49; \
            } \
        };

#define DBTS_TABLE50(TABLE_NAME, TYPE1, FIELD1, TYPE2, FIELD2, TYPE3, FIELD3, TYPE4, FIELD4, TYPE5, FIELD5, TYPE6, FIELD6, TYPE7, FIELD7, TYPE8, FIELD8, TYPE9, FIELD9, TYPE10, FIELD10, \
        TYPE11, FIELD11, TYPE12, FIELD12, TYPE13, FIELD13, TYPE14, FIELD14, TYPE15, FIELD15, TYPE16, FIELD16, TYPE17, FIELD17, TYPE18, FIELD18, TYPE19, FIELD19, TYPE20, FIELD20, \
        TYPE21, FIELD21, TYPE22, FIELD22, TYPE23, FIELD23, TYPE24, FIELD24, TYPE25, FIELD25, TYPE26, FIELD26, TYPE27, FIELD27, TYPE28, FIELD28, TYPE29, FIELD29, TYPE30, FIELD30, \
        TYPE31, FIELD31, TYPE32, FIELD32, TYPE33, FIELD33, TYPE34, FIELD34, TYPE35, FIELD35, TYPE36, FIELD36, TYPE37, FIELD37, TYPE38, FIELD38, TYPE39, FIELD39, TYPE40, FIELD40, \
        TYPE41, FIELD41, TYPE42, FIELD42, TYPE43, FIELD43, TYPE44, FIELD44, TYPE45, FIELD45, TYPE46, FIELD46, TYPE47, FIELD47, TYPE48, FIELD48, TYPE49, FIELD49, TYPE50, FIELD50) \
        struct TABLE_NAME \
        { \
            TYPE1 FIELD1; TYPE2 FIELD2; TYPE3 FIELD3; TYPE4 FIELD4; TYPE5 FIELD5; TYPE6 FIELD6; TYPE7 FIELD7; TYPE8 FIELD8; TYPE9 FIELD9; TYPE10 FIELD10; \
            TYPE11 FIELD11; TYPE12 FIELD12; TYPE13 FIELD13; TYPE14 FIELD14; TYPE15 FIELD15; TYPE16 FIELD16; TYPE17 FIELD17; TYPE18 FIELD18; TYPE19 FIELD19; TYPE20 FIELD20; \
            TYPE21 FIELD21; TYPE22 FIELD22; TYPE23 FIELD23; TYPE24 FIELD24; TYPE25 FIELD25; TYPE26 FIELD26; TYPE27 FIELD27; TYPE28 FIELD28; TYPE29 FIELD29; TYPE30 FIELD30; \
            TYPE31 FIELD31; TYPE32 FIELD32; TYPE33 FIELD33; TYPE34 FIELD34; TYPE35 FIELD35; TYPE36 FIELD36; TYPE37 FIELD37; TYPE38 FIELD38; TYPE39 FIELD39; TYPE40 FIELD40; \
            TYPE41 FIELD41; TYPE42 FIELD42; TYPE43 FIELD43; TYPE44 FIELD44; TYPE45 FIELD45; TYPE46 FIELD46; TYPE47 FIELD47; TYPE48 FIELD48; TYPE49 FIELD49; TYPE50 FIELD50; \
            TABLE_NAME& operator = (const TABLE_NAME& r) \
            { \
                FIELD1 = r.FIELD1; FIELD2 = r.FIELD2; FIELD3 = r.FIELD3; FIELD4 = r.FIELD4; FIELD5 = r.FIELD5; FIELD6 = r.FIELD6; FIELD7 = r.FIELD7; FIELD8 = r.FIELD8; FIELD9 = r.FIELD9; FIELD10 = r.FIELD10; \
                FIELD11 = r.FIELD11; FIELD12 = r.FIELD12; FIELD13 = r.FIELD13; FIELD14 = r.FIELD14; FIELD15 = r.FIELD15; FIELD16 = r.FIELD16; FIELD17 = r.FIELD17; FIELD18 = r.FIELD18; FIELD19 = r.FIELD19; FIELD20 = r.FIELD20; \
                FIELD21 = r.FIELD21; FIELD22 = r.FIELD22; FIELD23 = r.FIELD23; FIELD24 = r.FIELD24; FIELD25 = r.FIELD25; FIELD26 = r.FIELD26; FIELD27 = r.FIELD27; FIELD28 = r.FIELD28; FIELD29 = r.FIELD29; FIELD30 = r.FIELD30; \
                FIELD31 = r.FIELD31; FIELD32 = r.FIELD32; FIELD33 = r.FIELD33; FIELD34 = r.FIELD34; FIELD35 = r.FIELD35; FIELD36 = r.FIELD36; FIELD37 = r.FIELD37; FIELD38 = r.FIELD38; FIELD39 = r.FIELD39; FIELD40 = r.FIELD40; \
                FIELD41 = r.FIELD41; FIELD42 = r.FIELD42; FIELD43 = r.FIELD43; FIELD44 = r.FIELD44; FIELD45 = r.FIELD45; FIELD46 = r.FIELD46; FIELD47 = r.FIELD47; FIELD48 = r.FIELD48; FIELD49 = r.FIELD49; FIELD50 = r.FIELD50; \
            } \
        };
#pragma endregion


#endif // _H_TABLEDEFINE_H_